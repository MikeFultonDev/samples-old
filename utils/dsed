Syntax() {
	echo 'dsed <cmd> <dataset>'
        echo '  example: dsed s/old/new/g IBMUSER.MVSCMD.DFSORT.FILE'
	echo 'Note that -only- s/<old>/<new>/g is supported. Other commands could be added'
        exit 16
}
MAX_CHANGE=47
#set -x
#
# simple program that does a find/replace in a dataset (or PDS member)
#
if [ -z "$2" ]; then
else
	cmd=$1;
	dataset=$2;
fi
start=`expr match "${cmd}" '\(s\/\)'`
if [ "${start}" != "s/" ] ; then
	Syntax
fi
end=`expr match "${cmd}" '.*\(\/g\)'`
if [ "${end}" != "/g" ] ; then
	Syntax
fi
part=${cmd#s\/}
part=${part%\/g}
old=${part%/*}
new=${part#*/}

if [ ${#old} -gt ${MAX_CHANGE} ]; then
	echo "old and new strings must be less than ${MAX_CHANGE} bytes unfortunately"
	Syntax
fi
if [ ${#new} -gt ${MAX_CHANGE} ]; then
	echo "old and new strings must be less than ${MAX_CHANGE} bytes unfortunately"
	Syntax
fi

tmp="/tmp/`mvstmp`.out"
mvscmd --pgm=sort --args='NOLIST,MSGPRT=CRITICAL' --sortin=${dataset} --sysin=stdin --sortout=dummy --sysout=* >${tmp} 2>&1 <<zzz
 SORT FIELDS=COPY
 INREC FINDREP=(IN=C'${old}', 
 OUT=C'${new}')
zzz
if [ $? -gt 0 ] ; then 
	echo "Errors performing find/replace."
	echo "File was not modified."
	cat ${tmp} | awk '/[ |1]ICE[0-9][0-9][0-9]I/ { next; } // { print }' 
	echo "See ${tmp} for complete output"
	exit 8
fi
rm ${tmp}
mvscmd --pgm=sort --args='NOLIST' --sortin=${dataset} --sysin=stdin --sortout=${dataset} --sysout=* >${tmp} 2>&1 <<zzz
 OPTION MSGPRT=NONE
 SORT FIELDS=COPY
 INREC FINDREP=(IN=C'${old}', 
 OUT=C'${new}')
zzz
if [ $? -gt 0 ] ; then 
	echo "Errors performing find/replace."
	echo "File may be corrupted."
	cat ${tmp}
fi


